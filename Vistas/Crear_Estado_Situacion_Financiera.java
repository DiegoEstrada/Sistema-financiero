package Vistas;

import Modelo.EstadoFinanciero;
import Modelo.SituacionFinanciera;
import java.io.File;
import java.io.FileWriter;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author super
 */

    /*
        -----ATENCION-----
        Un unico detalle que no es un error sino que puede confundir al usuaro es el jtextfield del nombre de archivo
        porque cuando da clic en crear se abre un JFChooser para seleccionar la ruta a guardar su archivo y aparte le
        vuelve a pedir un nombre, que si es distraido o no pone atenóm, puede poner tro diferente
        Lo que trae esto como consecuenica es que el archivo tenga un nombre diferente al que el piensa 
        El nombre con el que se guarda es con el que lo escribe en el JFChooser, el otro nobre sirve para crear el objeto
        de tipo Situacion Financiera
    */
public class Crear_Estado_Situacion_Financiera extends javax.swing.JFrame {

    /**
     * Creates new form Crear_Estado_Situacion_Financiera
     */
        private SituacionFinanciera sf;
        private File f;
        private DefaultListModel lista = new DefaultListModel();
        
    
    public Crear_Estado_Situacion_Financiera() {
        initComponents();
        DefaultListModel l = new DefaultListModel();
        l.addElement("");
        this.jcbTipoCuenta.removeAllItems();
        this.ComboBoxNombreCuenta.removeAllItems();
        this.jlCuentasAgregadas.setModel(l);
        this.setVisible(true);
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bts_TipoCuenta = new javax.swing.ButtonGroup();
        bts_Activo = new javax.swing.ButtonGroup();
        bts_Pasivo = new javax.swing.ButtonGroup();
        bts_Capital = new javax.swing.ButtonGroup();
        Fondo = new javax.swing.JPanel();
        btRegresar = new javax.swing.JButton();
        PanelCrearNuevoSF = new javax.swing.JPanel();
        jbCrearEstado = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        PanelCuentas = new javax.swing.JPanel();
        lbCuentas = new javax.swing.JLabel();
        RdbActivo = new javax.swing.JRadioButton();
        RdbPasivo = new javax.swing.JRadioButton();
        RdbCapital = new javax.swing.JRadioButton();
        lbNombreCuenta = new javax.swing.JLabel();
        jcbTipoCuenta = new javax.swing.JComboBox<>();
        ComboBoxNombreCuenta = new javax.swing.JComboBox<>();
        lbSaldoCuenta = new javax.swing.JLabel();
        txtSaldoCuenta = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlCuentasAgregadas = new javax.swing.JList<>();
        jlbCuentasAgregadas = new javax.swing.JLabel();
        jbEliminarCuenta = new javax.swing.JButton();
        btAgregarCuenta = new javax.swing.JButton();
        btFinalizarSF = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Crear Estado de Situación Financiera");
        setResizable(false);

        Fondo.setBackground(new java.awt.Color(153, 204, 255));

        btRegresar.setBackground(new java.awt.Color(255, 255, 255));
        btRegresar.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btRegresar.setText("Regresar");
        btRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRegresarActionPerformed(evt);
            }
        });

        PanelCrearNuevoSF.setBackground(new java.awt.Color(153, 204, 255));

        jbCrearEstado.setBackground(new java.awt.Color(255, 255, 255));
        jbCrearEstado.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jbCrearEstado.setText("Crear Estado");
        jbCrearEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCrearEstadoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        jLabel1.setText("Presione el botón para crear un nuevo Estado de Situacion Financiera");

        javax.swing.GroupLayout PanelCrearNuevoSFLayout = new javax.swing.GroupLayout(PanelCrearNuevoSF);
        PanelCrearNuevoSF.setLayout(PanelCrearNuevoSFLayout);
        PanelCrearNuevoSFLayout.setHorizontalGroup(
            PanelCrearNuevoSFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelCrearNuevoSFLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jbCrearEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        PanelCrearNuevoSFLayout.setVerticalGroup(
            PanelCrearNuevoSFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelCrearNuevoSFLayout.createSequentialGroup()
                .addGroup(PanelCrearNuevoSFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbCrearEstado)
                    .addComponent(jLabel1))
                .addGap(0, 13, Short.MAX_VALUE))
        );

        PanelCuentas.setBackground(new java.awt.Color(153, 204, 255));

        lbCuentas.setFont(new java.awt.Font("Rockwell", 0, 16)); // NOI18N
        lbCuentas.setText("Cuentas");

        RdbActivo.setBackground(new java.awt.Color(153, 204, 255));
        bts_TipoCuenta.add(RdbActivo);
        RdbActivo.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        RdbActivo.setText("Activo");
        RdbActivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RdbActivoActionPerformed(evt);
            }
        });

        RdbPasivo.setBackground(new java.awt.Color(153, 204, 255));
        bts_TipoCuenta.add(RdbPasivo);
        RdbPasivo.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        RdbPasivo.setText("Pasivo");
        RdbPasivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RdbPasivoActionPerformed(evt);
            }
        });

        RdbCapital.setBackground(new java.awt.Color(153, 204, 255));
        bts_TipoCuenta.add(RdbCapital);
        RdbCapital.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        RdbCapital.setText("Capital");
        RdbCapital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RdbCapitalActionPerformed(evt);
            }
        });

        lbNombreCuenta.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        lbNombreCuenta.setText("Nombre de la Cuenta:");

        jcbTipoCuenta.setFont(new java.awt.Font("Times New Roman", 2, 11)); // NOI18N
        jcbTipoCuenta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbTipoCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbTipoCuentaActionPerformed(evt);
            }
        });

        ComboBoxNombreCuenta.setFont(new java.awt.Font("Times New Roman", 2, 11)); // NOI18N
        ComboBoxNombreCuenta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lbSaldoCuenta.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        lbSaldoCuenta.setText("Saldo:");

        txtSaldoCuenta.setFont(new java.awt.Font("Consolas", 0, 11)); // NOI18N

        jlCuentasAgregadas.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jlCuentasAgregadas);

        jlbCuentasAgregadas.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        jlbCuentasAgregadas.setText("Cuentas agregadas:");

        jbEliminarCuenta.setBackground(new java.awt.Color(255, 255, 255));
        jbEliminarCuenta.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jbEliminarCuenta.setText("Eliminar cuenta");
        jbEliminarCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarCuentaActionPerformed(evt);
            }
        });

        btAgregarCuenta.setBackground(new java.awt.Color(255, 255, 255));
        btAgregarCuenta.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btAgregarCuenta.setText("Agregar");
        btAgregarCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAgregarCuentaActionPerformed(evt);
            }
        });

        btFinalizarSF.setBackground(new java.awt.Color(255, 255, 255));
        btFinalizarSF.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btFinalizarSF.setText("Guardar Estado");
        btFinalizarSF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFinalizarSFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelCuentasLayout = new javax.swing.GroupLayout(PanelCuentas);
        PanelCuentas.setLayout(PanelCuentasLayout);
        PanelCuentasLayout.setHorizontalGroup(
            PanelCuentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelCuentasLayout.createSequentialGroup()
                .addGroup(PanelCuentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelCuentasLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(PanelCuentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelCuentasLayout.createSequentialGroup()
                                .addComponent(RdbActivo)
                                .addGap(124, 124, 124)
                                .addGroup(PanelCuentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PanelCuentasLayout.createSequentialGroup()
                                        .addComponent(RdbPasivo)
                                        .addGap(140, 140, 140)
                                        .addComponent(RdbCapital))
                                    .addComponent(lbCuentas)))
                            .addGroup(PanelCuentasLayout.createSequentialGroup()
                                .addGroup(PanelCuentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PanelCuentasLayout.createSequentialGroup()
                                        .addGroup(PanelCuentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(PanelCuentasLayout.createSequentialGroup()
                                                .addComponent(lbNombreCuenta)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(ComboBoxNombreCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(PanelCuentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(PanelCuentasLayout.createSequentialGroup()
                                                    .addComponent(jbEliminarCuenta)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(btAgregarCuenta))
                                                .addGroup(PanelCuentasLayout.createSequentialGroup()
                                                    .addComponent(lbSaldoCuenta)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(txtSaldoCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelCuentasLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(btFinalizarSF)
                                        .addGap(40, 40, 40)))
                                .addGroup(PanelCuentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jlbCuentasAgregadas)))))
                    .addGroup(PanelCuentasLayout.createSequentialGroup()
                        .addGap(203, 203, 203)
                        .addComponent(jcbTipoCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        PanelCuentasLayout.setVerticalGroup(
            PanelCuentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelCuentasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbCuentas)
                .addGap(7, 7, 7)
                .addGroup(PanelCuentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RdbActivo)
                    .addComponent(RdbPasivo)
                    .addComponent(RdbCapital))
                .addGap(18, 18, 18)
                .addComponent(jcbTipoCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(PanelCuentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbNombreCuenta)
                    .addGroup(PanelCuentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ComboBoxNombreCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jlbCuentasAgregadas)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelCuentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(PanelCuentasLayout.createSequentialGroup()
                        .addGroup(PanelCuentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbSaldoCuenta)
                            .addComponent(txtSaldoCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PanelCuentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jbEliminarCuenta)
                            .addComponent(btAgregarCuenta))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btFinalizarSF))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout FondoLayout = new javax.swing.GroupLayout(Fondo);
        Fondo.setLayout(FondoLayout);
        FondoLayout.setHorizontalGroup(
            FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FondoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelCrearNuevoSF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(FondoLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(PanelCuentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FondoLayout.createSequentialGroup()
                        .addComponent(btRegresar)
                        .addGap(12, 12, 12))))
        );
        FondoLayout.setVerticalGroup(
            FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FondoLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(PanelCrearNuevoSF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelCuentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btRegresar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Fondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Fondo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RdbActivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RdbActivoActionPerformed
      asignarValoresCBTipo();
    }//GEN-LAST:event_RdbActivoActionPerformed

    private void btAgregarCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAgregarCuentaActionPerformed
        String nombrecuenta,tipocuenta,saldo;
        int i;
        
        i = this.ComboBoxNombreCuenta.getSelectedIndex();
        saldo = this.txtSaldoCuenta.getText();
        nombrecuenta = this.ComboBoxNombreCuenta.getItemAt(i);
        
        //sf.agregarCuenta(saldo, saldo, saldo, saldo);
        /*
            Para obtener los nombres es mejor usar un combo bo para la clasificacion y usar ifs para el nombre de los 
            radiobuttns
        
        */
        
        
        if (this.RdbActivo.isSelected())
        {
            i = this.jcbTipoCuenta.getSelectedIndex();
            tipocuenta = this.jcbTipoCuenta.getItemAt(i);
            //System.out.println("Voy a ingresar Activo, "+ tipocuenta +" , " +nombrecuenta+ ", "+saldo);
            sf.agregarCuenta("Activo", tipocuenta, nombrecuenta, saldo);
            lista.addElement(nombrecuenta+"="+ saldo);
            jlCuentasAgregadas.setModel(lista);
            
        }
        else
         {
             if (this.RdbPasivo.isSelected())
             {
                  i = this.jcbTipoCuenta.getSelectedIndex();
                  tipocuenta = this.jcbTipoCuenta.getItemAt(i);
                  //System.out.println("Voy a ingresar Pasivo, "+ tipocuenta +" , " +nombrecuenta+ ", "+saldo);
                  sf.agregarCuenta("Pasivo", tipocuenta, nombrecuenta, saldo);
                  lista.addElement(nombrecuenta+"="+ saldo);
                  jlCuentasAgregadas.setModel(lista);
             }
             else
             {
                 if(this.RdbCapital.isSelected())
                 {
                       i = this.jcbTipoCuenta.getSelectedIndex();
                       tipocuenta = this.jcbTipoCuenta.getItemAt(i);
                       System.out.println("Voy a ingresar Capital, "+ tipocuenta +" , " +nombrecuenta+ ", "+saldo);
                       sf.agregarCuenta("Capital", tipocuenta, nombrecuenta, saldo);
                       lista.addElement(nombrecuenta+"="+ saldo);
                       jlCuentasAgregadas.setModel(lista);
                 }
                 else
                     System.out.println("Selecciona una opcion"); //JOPTION
             }
         }
        
        

        
    }//GEN-LAST:event_btAgregarCuentaActionPerformed

    private void jbCrearEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCrearEstadoActionPerformed
        
        
        /*
        if(this.txtNombreSF.getText().isEmpty())
        {   
            System.out.println("Ingresa un nombre a tu sf"); //JOPTION
        }
        else
        {
        */
            String nombre="";
        
            
            JFileChooser guardarestado = new JFileChooser();
            FileNameExtensionFilter extension = new FileNameExtensionFilter("Estados finacieros(*.txt)", "txt");
            guardarestado.setFileFilter(extension);
            
            try{
                guardarestado.showSaveDialog(this);
                this.f = guardarestado.getSelectedFile();
                //nombre = this.guardar.getName();
                //System.out.println(this.guardar);
                SituacionFinanciera situacionfinanciera = new SituacionFinanciera(this.f);
                this.sf =  situacionfinanciera;
                if (this.f != null)
                {
                    
                    
                        JOptionPane.showMessageDialog(null,
                                "El archivo se ha generado correctamente",
                                                        "Información",JOptionPane.INFORMATION_MESSAGE);
                }
                
                
            }catch(Exception e){
            
            }
        //}
        
    }//GEN-LAST:event_jbCrearEstadoActionPerformed

    private void RdbPasivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RdbPasivoActionPerformed
        asignarValoresCBTipo();
    }//GEN-LAST:event_RdbPasivoActionPerformed

    private void RdbCapitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RdbCapitalActionPerformed
        asignarValoresCBTipo();
    }//GEN-LAST:event_RdbCapitalActionPerformed

    private void jcbTipoCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbTipoCuentaActionPerformed
        asignarCuentasCB();
    }//GEN-LAST:event_jcbTipoCuentaActionPerformed

    private void jbEliminarCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarCuentaActionPerformed
        int j,i = jlCuentasAgregadas.getSelectedIndex();
        String fila;
        String nombre = "";
        if(i<0)
        {
            Ventana.ShowInformationMessage("Selecciona la cuenta que deseas agregar");  //JOPTION
        }
        else
        {
            fila = jlCuentasAgregadas.getSelectedValue();
            
            for ( j = 0; j <fila.length(); j++) {
                if (!(fila.charAt(j)>=48 && fila.charAt(j)<=57) || fila.charAt(j)==32 )
                {
                    nombre = nombre + fila.charAt(j);
                }
            }
            //System.out.println("SELECCONE "+ nombre);
            sf.eliminarCuenta(nombre);
            lista.removeElementAt(i);
            jlCuentasAgregadas.setModel(lista);
        }
    }//GEN-LAST:event_jbEliminarCuentaActionPerformed

    private void btFinalizarSFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFinalizarSFActionPerformed
        this.sf.mostrarCuentas();
        if (this.sf.verificarEstado()){
        Inicio forminicio = new Inicio();
        forminicio.setVisible(true);
        this.setVisible(false);
        this.sf.crearEstadoFinanciero(false); //Envio false porque no quiero calcular depresiaciones ni amortizaciones
        }
        else
            Ventana.ShowErrorMessage("Las cuentas ingresadas no estan balanceadas ");  //JOPION
        
        
    }//GEN-LAST:event_btFinalizarSFActionPerformed

    private void btRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRegresarActionPerformed
        Inicio forminicio = new Inicio();
        forminicio.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btRegresarActionPerformed

   public void asignarValoresCBTipo()
   {
         if (this.RdbActivo.isSelected())
        {
             this.jcbTipoCuenta.removeAllItems();
             this.jcbTipoCuenta.addItem("Circulante");
             this.jcbTipoCuenta.addItem("Fijo");
             this.jcbTipoCuenta.addItem("Diferido");
            
        }
        else
         {
             if (this.RdbPasivo.isSelected())
             {
                 this.jcbTipoCuenta.removeAllItems();
                 this.jcbTipoCuenta.addItem("Circulante");
                 this.jcbTipoCuenta.addItem("Fijo");
             }
             else
             {
                 if(this.RdbCapital.isSelected())
                 {
                      this.jcbTipoCuenta.removeAllItems();
                      this.jcbTipoCuenta.addItem("Capital social");
                      this.jcbTipoCuenta.addItem("Utilidad neta");
                 }
                 else
                     Ventana.ShowInformationMessage("Selecciona una opcion"); //JOPTION
             }
         }
             
        
           
   }
   

   public void asignarCuentasCB()
   {
       int i = this.jcbTipoCuenta.getSelectedIndex();
       
       if (this.RdbActivo.isSelected())
        {
             switch(i)
             {
                 case 0: //Caso Circulante
                      this.ComboBoxNombreCuenta.removeAllItems();
                      this.ComboBoxNombreCuenta.addItem("Caja");
                      this.ComboBoxNombreCuenta.addItem("Bancos");
                      this.ComboBoxNombreCuenta.addItem("Alamacen");
                      this.ComboBoxNombreCuenta.addItem("Clientes");
                      this.ComboBoxNombreCuenta.addItem("Deudores");
                      this.ComboBoxNombreCuenta.addItem("Documentos por cobrar");
                 break;
                 case 1: //Caso Fijo
                     this.ComboBoxNombreCuenta.removeAllItems();
                     this.ComboBoxNombreCuenta.addItem("Terrenos");
                     this.ComboBoxNombreCuenta.addItem("Edificios");
                     this.ComboBoxNombreCuenta.addItem("Mobiliario y equipo");
                     this.ComboBoxNombreCuenta.addItem("Equipo de reparto");
                     this.ComboBoxNombreCuenta.addItem("Equipo de transporte");
                     this.ComboBoxNombreCuenta.addItem("Equipo de computo");
                     break;
                 case 2: //Caso Diferido
                      this.ComboBoxNombreCuenta.removeAllItems();
                      this.ComboBoxNombreCuenta.addItem("Gastos de instalacion ");
                      this.ComboBoxNombreCuenta.addItem("Gastos de organizacion");
                      this.ComboBoxNombreCuenta.addItem("Papeleria y utiles ");
                      this.ComboBoxNombreCuenta.addItem("Propaganda y publicidad");
                     break;
                 default:
                     Ventana.ShowInformationMessage("Selecciona un tipo de cuenta"); //JOPTION
                     break;
             }
            
        }
        else
         {
             if (this.RdbPasivo.isSelected())
             {
                 switch(i)
                {
                 case 0: //Caso Circulante
                        this.ComboBoxNombreCuenta.removeAllItems();
                        this.ComboBoxNombreCuenta.addItem("Proveedores");
                        this.ComboBoxNombreCuenta.addItem("Deudores");
                        this.ComboBoxNombreCuenta.addItem("Acreedores");
                        this.ComboBoxNombreCuenta.addItem("Documentos por pagar");
                     break;
                 case 1:  //Caso Fijo
                        this.ComboBoxNombreCuenta.removeAllItems();
                        this.ComboBoxNombreCuenta.addItem("Documentos por pagar a largo plazo");
                        this.ComboBoxNombreCuenta.addItem("Acreedores hipotecarios");
                     break;
                 default:
                      Ventana.ShowInformationMessage("Selecciona una cuenta"); //JOPTION
                     break;
                }
                         
             }
             else
             {
                 if(this.RdbCapital.isSelected())
                 {
                       switch(i)
                        {
                        case 0: //Caso Capital social
                            this.ComboBoxNombreCuenta.removeAllItems();
                            this.ComboBoxNombreCuenta.addItem("Capital social");
                        
                            break;
                        case 1: // Caso Utilidad neta
                            this.ComboBoxNombreCuenta.removeAllItems();
                            this.ComboBoxNombreCuenta.addItem("Utilidad neta");
                            break;
                        default:
                             Ventana.ShowInformationMessage("Selecciona una cuenta"); //JOPTION
                            break;
                        }
                 }
                 else
                     Ventana.ShowInformationMessage("Selecciona un tipo de cuenta"); //JOPTION
             }
         }
   }
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBoxNombreCuenta;
    private javax.swing.JPanel Fondo;
    private javax.swing.JPanel PanelCrearNuevoSF;
    private javax.swing.JPanel PanelCuentas;
    private javax.swing.JRadioButton RdbActivo;
    private javax.swing.JRadioButton RdbCapital;
    private javax.swing.JRadioButton RdbPasivo;
    private javax.swing.JButton btAgregarCuenta;
    private javax.swing.JButton btFinalizarSF;
    private javax.swing.JButton btRegresar;
    private javax.swing.ButtonGroup bts_Activo;
    private javax.swing.ButtonGroup bts_Capital;
    private javax.swing.ButtonGroup bts_Pasivo;
    private javax.swing.ButtonGroup bts_TipoCuenta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbCrearEstado;
    private javax.swing.JButton jbEliminarCuenta;
    private javax.swing.JComboBox<String> jcbTipoCuenta;
    private javax.swing.JList<String> jlCuentasAgregadas;
    private javax.swing.JLabel jlbCuentasAgregadas;
    private javax.swing.JLabel lbCuentas;
    private javax.swing.JLabel lbNombreCuenta;
    private javax.swing.JLabel lbSaldoCuenta;
    private javax.swing.JTextField txtSaldoCuenta;
    // End of variables declaration//GEN-END:variables
}
