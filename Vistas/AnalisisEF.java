/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Modelo.Analisis.Vertical.BenchMarking;
import Modelo.Analisis.Vertical.PorcientosIntegrados;
import Modelo.Analisis.Vertical.RazonesFinancieras;
import Modelo.Resultados;
import Modelo.SituacionFinanciera;
import java.io.File;
import java.util.ArrayList;
import java.util.Map;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author super
 */
public class AnalisisEF extends javax.swing.JFrame {

    /*
     los estados X representan al periodo actual
     Los estaods Y represnentan al periodo anterior
     */
        private File estados[];
        private SituacionFinanciera sfX;
        private SituacionFinanciera sfY;
        private Resultados erX;
        private Resultados erY;
       
    
        
    public AnalisisEF(File nsf, File ner) {
        this.estados = new File[2];
        //System.out.println("--------"+nsf);
        //System.out.println("--------yyyy"+ner);
        sfX = new SituacionFinanciera(nsf);
        erX = new Resultados(ner);
       
        sfX.leerEstadoFinanciero();
        erX.leerEstadoFinanciero();
        //System.out.println("Llegana analisis Situacion ->"+sfX.getF());
        //System.out.println("Llegana analisis Resultados ->"+erX.getF());
        
        
        ArrayList<String> nombresOrdenados = erX.obtenerNombresdeCuentasOrdenadas();
        System.out.println(nombresOrdenados.size());
       
        ArrayList<String> nombresOrdenados1 = sfX.obtenerNombresdeCuentasOrdenadas();
        System.out.println(nombresOrdenados1.size());
        
        initComponents();
        DefaultListModel lista = new DefaultListModel();
        lista.addElement("Ningun elemento seleccionado");
        lista.addElement("Ningun elemento seleccionado");
        
        //sfX.mostrarCuentas();
        //System.out.println("----------------------------");
        //erX.mostrarCuentas();
               
        this.jListArchivosAbiertos.setModel(lista);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TipoAnálisis = new javax.swing.ButtonGroup();
        Rdbs_Ramo = new javax.swing.ButtonGroup();
        Fondo = new javax.swing.JPanel();
        lb_OpcionAnalisis = new javax.swing.JLabel();
        Panel_Opciones = new javax.swing.JPanel();
        jrbPorcientosDiferencias = new javax.swing.JRadioButton();
        jbVerAnalisis = new javax.swing.JButton();
        jrbRazonesyBM = new javax.swing.JRadioButton();
        lbRamo = new javax.swing.JLabel();
        RdbIndustria = new javax.swing.JRadioButton();
        RdbComercio = new javax.swing.JRadioButton();
        RdbServicios = new javax.swing.JRadioButton();
        RdbTecno = new javax.swing.JRadioButton();
        PanelEstadosFinancieros = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListArchivosAbiertos = new javax.swing.JList<>();
        jbAgregarEstado = new javax.swing.JButton();
        jbCerrarEstado = new javax.swing.JButton();
        btConfirmar = new javax.swing.JButton();
        PanelTablaBench = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTableBenchMarking = new javax.swing.JTable();
        jbSFPorcientosDiferencias = new javax.swing.JButton();
        jbERPorcientosDiefernecias = new javax.swing.JButton();
        lbPorcentaje = new javax.swing.JLabel();
        txtIncVentas = new javax.swing.JTextField();
        txtPorcentaje = new javax.swing.JTextField();
        jbRealizarPropuestas = new javax.swing.JButton();
        ComboBoxAnalisis = new javax.swing.JComboBox<>();
        lbIncrementoVentas = new javax.swing.JLabel();
        btRegresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Análisis Financiero");

        Fondo.setBackground(new java.awt.Color(153, 204, 255));

        lb_OpcionAnalisis.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        lb_OpcionAnalisis.setText("Seleccione una opción:");

        Panel_Opciones.setBackground(new java.awt.Color(153, 204, 255));

        jrbPorcientosDiferencias.setBackground(new java.awt.Color(153, 204, 255));
        TipoAnálisis.add(jrbPorcientosDiferencias);
        jrbPorcientosDiferencias.setText("Analisis Porcientos y Diferencias");
        jrbPorcientosDiferencias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbPorcientosDiferenciasActionPerformed(evt);
            }
        });

        jbVerAnalisis.setBackground(new java.awt.Color(255, 255, 255));
        jbVerAnalisis.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jbVerAnalisis.setText("Ver Analisis");
        jbVerAnalisis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbVerAnalisisActionPerformed(evt);
            }
        });

        jrbRazonesyBM.setBackground(new java.awt.Color(153, 204, 255));
        TipoAnálisis.add(jrbRazonesyBM);
        jrbRazonesyBM.setText("Razones financieras y Benchmarking");

        lbRamo.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        lbRamo.setText("Ramo:");

        RdbIndustria.setBackground(new java.awt.Color(153, 204, 255));
        Rdbs_Ramo.add(RdbIndustria);
        RdbIndustria.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        RdbIndustria.setText("Industria");
        RdbIndustria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RdbIndustriaActionPerformed(evt);
            }
        });

        RdbComercio.setBackground(new java.awt.Color(153, 204, 255));
        Rdbs_Ramo.add(RdbComercio);
        RdbComercio.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        RdbComercio.setText("Comercio");

        RdbServicios.setBackground(new java.awt.Color(153, 204, 255));
        Rdbs_Ramo.add(RdbServicios);
        RdbServicios.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        RdbServicios.setText("Servicios");

        RdbTecno.setBackground(new java.awt.Color(153, 204, 255));
        Rdbs_Ramo.add(RdbTecno);
        RdbTecno.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        RdbTecno.setText("Tecnologia");

        javax.swing.GroupLayout Panel_OpcionesLayout = new javax.swing.GroupLayout(Panel_Opciones);
        Panel_Opciones.setLayout(Panel_OpcionesLayout);
        Panel_OpcionesLayout.setHorizontalGroup(
            Panel_OpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_OpcionesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_OpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel_OpcionesLayout.createSequentialGroup()
                        .addGroup(Panel_OpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jrbRazonesyBM)
                            .addComponent(jrbPorcientosDiferencias))
                        .addGap(41, 41, 41)
                        .addComponent(jbVerAnalisis))
                    .addGroup(Panel_OpcionesLayout.createSequentialGroup()
                        .addComponent(lbRamo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(RdbIndustria)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(RdbComercio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(RdbServicios)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(RdbTecno)))
                .addContainerGap(9, Short.MAX_VALUE))
        );
        Panel_OpcionesLayout.setVerticalGroup(
            Panel_OpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_OpcionesLayout.createSequentialGroup()
                .addGroup(Panel_OpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel_OpcionesLayout.createSequentialGroup()
                        .addContainerGap(17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbVerAnalisis))
                    .addGroup(Panel_OpcionesLayout.createSequentialGroup()
                        .addComponent(jrbPorcientosDiferencias)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jrbRazonesyBM)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addGroup(Panel_OpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbRamo)
                    .addComponent(RdbIndustria)
                    .addComponent(RdbComercio)
                    .addComponent(RdbServicios)
                    .addComponent(RdbTecno))
                .addContainerGap())
        );

        PanelEstadosFinancieros.setBackground(new java.awt.Color(153, 204, 255));

        jListArchivosAbiertos.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jListArchivosAbiertos);

        jbAgregarEstado.setBackground(new java.awt.Color(255, 255, 255));
        jbAgregarEstado.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jbAgregarEstado.setText("Agregar Estado");
        jbAgregarEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAgregarEstadoActionPerformed(evt);
            }
        });

        jbCerrarEstado.setBackground(new java.awt.Color(255, 255, 255));
        jbCerrarEstado.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jbCerrarEstado.setText("Cerrar Estado");
        jbCerrarEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCerrarEstadoActionPerformed(evt);
            }
        });

        btConfirmar.setBackground(new java.awt.Color(255, 255, 255));
        btConfirmar.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btConfirmar.setText("Continuar");
        btConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConfirmarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelEstadosFinancierosLayout = new javax.swing.GroupLayout(PanelEstadosFinancieros);
        PanelEstadosFinancieros.setLayout(PanelEstadosFinancierosLayout);
        PanelEstadosFinancierosLayout.setHorizontalGroup(
            PanelEstadosFinancierosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelEstadosFinancierosLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(PanelEstadosFinancierosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelEstadosFinancierosLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(PanelEstadosFinancierosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jbAgregarEstado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbCerrarEstado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelEstadosFinancierosLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 151, Short.MAX_VALUE)
                        .addComponent(btConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        PanelEstadosFinancierosLayout.setVerticalGroup(
            PanelEstadosFinancierosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelEstadosFinancierosLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(PanelEstadosFinancierosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbAgregarEstado)
                .addGap(7, 7, 7)
                .addComponent(btConfirmar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbCerrarEstado))
        );

        PanelTablaBench.setBackground(new java.awt.Color(153, 204, 255));

        JTableBenchMarking.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Indicador", "Razones Financieras", "Razones Estandar", "Diferencia"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(JTableBenchMarking);

        jbSFPorcientosDiferencias.setBackground(new java.awt.Color(255, 255, 255));
        jbSFPorcientosDiferencias.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jbSFPorcientosDiferencias.setText("Ver Diferencias y Porcientos de Situacioón financiera");
        jbSFPorcientosDiferencias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSFPorcientosDiferenciasActionPerformed(evt);
            }
        });

        jbERPorcientosDiefernecias.setBackground(new java.awt.Color(255, 255, 255));
        jbERPorcientosDiefernecias.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jbERPorcientosDiefernecias.setText("Ver Difernecias y Porcientos Estado de Resultados");
        jbERPorcientosDiefernecias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbERPorcientosDieferneciasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelTablaBenchLayout = new javax.swing.GroupLayout(PanelTablaBench);
        PanelTablaBench.setLayout(PanelTablaBenchLayout);
        PanelTablaBenchLayout.setHorizontalGroup(
            PanelTablaBenchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTablaBenchLayout.createSequentialGroup()
                .addGroup(PanelTablaBenchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PanelTablaBenchLayout.createSequentialGroup()
                        .addComponent(jbSFPorcientosDiferencias)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbERPorcientosDiefernecias)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        PanelTablaBenchLayout.setVerticalGroup(
            PanelTablaBenchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTablaBenchLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelTablaBenchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSFPorcientosDiferencias)
                    .addComponent(jbERPorcientosDiefernecias))
                .addGap(0, 24, Short.MAX_VALUE))
        );

        lbPorcentaje.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        lbPorcentaje.setText("Porcentaje esperado:");

        txtIncVentas.setFont(new java.awt.Font("Consolas", 0, 11)); // NOI18N

        txtPorcentaje.setFont(new java.awt.Font("Consolas", 0, 11)); // NOI18N

        jbRealizarPropuestas.setBackground(new java.awt.Color(255, 255, 255));
        jbRealizarPropuestas.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jbRealizarPropuestas.setText("Realizar propuestas");
        jbRealizarPropuestas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRealizarPropuestasActionPerformed(evt);
            }
        });

        ComboBoxAnalisis.setFont(new java.awt.Font("Times New Roman", 2, 11)); // NOI18N
        ComboBoxAnalisis.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Porcientos integrados", "Razones Financieras", "BenchMarking", "Diferencias", "Punto de equilibrio", "Punto de equilibrio con Utilidad" }));
        ComboBoxAnalisis.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        lbIncrementoVentas.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        lbIncrementoVentas.setText("Incremento de Ventas:");

        btRegresar.setBackground(new java.awt.Color(255, 255, 255));
        btRegresar.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btRegresar.setText("Regresar");
        btRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRegresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FondoLayout = new javax.swing.GroupLayout(Fondo);
        Fondo.setLayout(FondoLayout);
        FondoLayout.setHorizontalGroup(
            FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FondoLayout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(PanelTablaBench, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FondoLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FondoLayout.createSequentialGroup()
                                .addComponent(lbIncrementoVentas)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtIncVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(ComboBoxAnalisis, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jbRealizarPropuestas)
                                .addGroup(FondoLayout.createSequentialGroup()
                                    .addComponent(lbPorcentaje)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtPorcentaje, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(76, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FondoLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btRegresar)
                        .addContainerGap())))
            .addGroup(FondoLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FondoLayout.createSequentialGroup()
                        .addComponent(Panel_Opciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PanelEstadosFinancieros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lb_OpcionAnalisis))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        FondoLayout.setVerticalGroup(
            FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FondoLayout.createSequentialGroup()
                .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(FondoLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(PanelEstadosFinancieros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(FondoLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(lb_OpcionAnalisis)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Panel_Opciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(FondoLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(PanelTablaBench, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(FondoLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtIncVentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbIncrementoVentas))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbPorcentaje)
                            .addComponent(txtPorcentaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ComboBoxAnalisis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jbRealizarPropuestas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btRegresar)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Fondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Fondo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbVerAnalisisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbVerAnalisisActionPerformed
        if (this.jrbRazonesyBM.isSelected())
        {
           //Aqui se deben de poner en modo visibles los elemntos de razones financieras
            cargarDatosTablaRazones();
        }
        else
        {
            if (this.jrbPorcientosDiferencias.isSelected())
            {
               cargarDatosTablaCuentas();
            }
            else
                    Ventana.ShowInformationMessage("Selecciona un tipo de analisis");  //joption
        }
    }//GEN-LAST:event_jbVerAnalisisActionPerformed

    
    public void cerrarEstadoFinanciero(DefaultListModel lista, int elementoseleccionado )
    {
       
        if(elementoseleccionado<0)
        {
            Ventana.ShowInformationMessage("Selecciona un archivo a ser cerrado");
            
        }
        else
        {
            /*
                ------ATENCION------
                Una manera de evitar que cuando se cierren los archivos se tengan los dos abuertos
                Puede NO ser la opcion usar el metodo .delete() porque borra el archivo creado, tampoco podria ser
                una opcion mandarlo a null para evitar los apuntadores a nulos al hacer la transicion a otro form
            
                Podemos usar los textos de la lista, verificando que los dos sean diferentes que el estadocerrado
                (Ningun elemento seleccionado), ademas podriamos verificar que tenga algun nombre en especial el archivo
                que abrio el usuario
            
                --------RESUELTO-----------
                Es necesrio verificar si los archivos son == a null para que entre en el if declarado en el metodo
                
            */
            
                    
            //lista.removeElementAt(elementoselecionado);
            estados[elementoseleccionado]=null;
            mandaraEstadoCerrado(lista, elementoseleccionado);
        }
    }
    
    
    
     public  void mandaraEstadoCerrado(DefaultListModel lista, int i)
    {
        String nombre = "Ningun elemento seleccionado";
        lista.set(i,nombre);
    }
    private void jbCerrarEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCerrarEstadoActionPerformed
         int i = this.jListArchivosAbiertos.getSelectedIndex();
         String nombre = this.jListArchivosAbiertos.getSelectedValue();
            //System.out.println("->>>>  "+nombre);
        if(nombre.contains("Situacion")){
             estados[0] = null;}
        else{
             estados[1] = null;}
        
        cerrarEstadoFinanciero((DefaultListModel)this.jListArchivosAbiertos.getModel(), i);
    }//GEN-LAST:event_jbCerrarEstadoActionPerformed

    private void jbAgregarEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAgregarEstadoActionPerformed
         JFileChooser abrredo = new JFileChooser();
                FileNameExtensionFilter extension = new FileNameExtensionFilter("Estados finacieros(*.txt)", "txt");
                abrredo.setDialogTitle("Selecciona un estado financiero");
                abrredo.setFileFilter(extension);
                abrredo.showDialog(this, "Seleccionar");
        
        //La posicion 0 del array es situacion financiera y la 1 resultados
        
        try {
            File archivo = abrredo.getSelectedFile();
            
            agregarEdoFinancieroLista((DefaultListModel)this.jListArchivosAbiertos.getModel(), archivo);
            
        }catch(Exception e){
            System.out.println("Excepcion ->"+e.getMessage());
        }
    }//GEN-LAST:event_jbAgregarEstadoActionPerformed

    private void btRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRegresarActionPerformed
        
        Inicio formularioInicio = new Inicio();
        formularioInicio.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btRegresarActionPerformed

    private void jrbPorcientosDiferenciasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbPorcientosDiferenciasActionPerformed
        
    }//GEN-LAST:event_jrbPorcientosDiferenciasActionPerformed

    private void jbSFPorcientosDiferenciasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSFPorcientosDiferenciasActionPerformed
        AnalisisSF formularoTablaAnalisisSF = new AnalisisSF(sfX, sfY);
        formularoTablaAnalisisSF.setVisible(true);
    }//GEN-LAST:event_jbSFPorcientosDiferenciasActionPerformed

    private void jbRealizarPropuestasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRealizarPropuestasActionPerformed
        Propuestas formularioPropuestas = new Propuestas(sfX,erX);
        formularioPropuestas.setVisible(true);
    }//GEN-LAST:event_jbRealizarPropuestasActionPerformed

    private void jbERPorcientosDieferneciasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbERPorcientosDieferneciasActionPerformed
        AnalisisER formularioTablaAnalisisER = new AnalisisER(erX, erY);
        formularioTablaAnalisisER.setVisible(true);
    }//GEN-LAST:event_jbERPorcientosDieferneciasActionPerformed

    private void btConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConfirmarActionPerformed
         String nombre1,nombre2;
        //String sf,er;
        
        if(estados[0]==null || estados[1]==null)
            //JOPTION
             Ventana.ShowWarningMessage("Algun archivo no esta abierto");
        else{
            nombre1 = estados[0].getName();
            nombre2 = estados[1].getName();
        //System.out.println("->>>>>"+estados[0].getName());
        //System.out.println("->>>>"+estados[1].getName());
        
            if  ((nombre1.contains("Resultados") ||  nombre1.contains("Situacion")) 
                    && 
                (nombre1.contains("Resultados") ||  nombre1.contains("Situacion"))
                 
                    &&
                !( (nombre1.contains("Resultados") && nombre2.contains("Resultados")) || (nombre1.contains("Situacion")&&nombre2.contains("Situacion"))  )
                )
                
            {
                Ventana.ShowInformationMessage("¡Estados correctos!");
                //System.out.println("***********Estados correctos");
                
                this.sfY = new SituacionFinanciera(estados[0]);
                this.erY = new Resultados(estados[1]);
                
                //sfY.leerEstadoFinanciero();
                //rY.leerEstadoFinanciero();
                
                /*
                System.out.println("------------------------------------------");
                System.out.println("ER");
                er.leerEstadoFinanciero();
                er.mostrarCuentas();
                
                */
                
            }
            else   
               Ventana.ShowErrorMessage("Alguno de los archivos que selecconaste no tiene el formato para ser leido");  //JOPTION
        
            
            System.out.println("Aqui "+estados[0]);
            System.out.println(estados[1]);
        }
    }//GEN-LAST:event_btConfirmarActionPerformed

    private void RdbIndustriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RdbIndustriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RdbIndustriaActionPerformed

    
    public  void agregarEdoFinancieroLista(DefaultListModel lista, File estado)
    {
        String defecto = "Ningun elemento seleccionado";
        String nombre  = estado.getName();
        if (lista.firstElement().equals(defecto)) {
            lista.set(0,nombre);
             if(nombre.contains("Situacion"))
             estados[0] = estado;
             else
             estados[1] = estado;
        }
        else 
        {
            if(lista.lastElement().equals(defecto)){
             lista.set(1,nombre);
             if(nombre.contains("Situacion"))
             estados[0] = estado;
             else
             estados[1] = estado;
            }
            else
            {
                //Aqui debe ir in JOPtion para que diga que ya no se pueden agregar mas estados
                Ventana.ShowInformationMessage("Solo es posible realizar el analisis de 2 estados financieros");
            }
        }
    }
    
    public void cargarDatosTablaRazones()
    {
        int t;
        DefaultTableModel modelo = (DefaultTableModel) this.JTableBenchMarking.getModel();
        ArrayList<String> indicadores = new ArrayList();
        indicadores.add("Liquidez"); indicadores.add("Solvencia");  indicadores.add("Estabilidad economica");
        indicadores.add("Inmovilizacion de capital"); indicadores.add("Rentabilidad en ventas");  indicadores.add("Rentabilidad en inversion");
        
        System.out.println("Vamos a comenzar el analisis");
        Map<String,ArrayList<String>> cuentassfX = sfX.importarNombreySaldo();
        Map<String,ArrayList<String>> cuentaserX = erX.importarCuentas();
        
        RazonesFinancieras rfX = new RazonesFinancieras(cuentaserX,cuentassfX);
        
        Map<String,String> analisisRF = rfX.analisisRazonesFinancieras();
        //rfX.imprimirRazonesFinancieras(analisisRF);
        
        /*-----------ATENCION-----------
            Falta crear un elemento grafico para senalar el ramo de la empresa
        */
        
        //Objetos del frame para el ramo
        int rama=0;
        String ramo="";
        if(this.RdbIndustria.isSelected())
        {
            rama=1;
            ramo="Industria";
        }
        else if(this.RdbComercio.isSelected())
        {
            rama=2;
            ramo="Comercio";
        }
        else if(this.RdbServicios.isSelected())
        {
            rama=3;
            ramo="Servicios";
        }
        else if(this.RdbTecno.isSelected())
        {
            rama=4;
            ramo="Tecnologia";
        }
        else
        {
            Ventana.ShowErrorMessage("No se ha seleccionado la rama de la empresa.");
            rama=0;
            ramo=null;
        }
        //System.out.println("Bench: "+rama);
        //System.out.println("Rama:"+ramo);
        BenchMarking bm = new BenchMarking(rfX, rama);
        Map<String,String> analisisBM = bm.AnalisisBenchMarking();
        ArrayList<String> indicadoresEstandar = bm.obtenerIndicadoresdeRamo(ramo);
        
        String fila[] = new String[4];
        try {
        int filas=this.JTableBenchMarking.getRowCount();
            for (int i = 0;filas>i; i++) {
                modelo.removeRow(0);
            }
           
            
        } catch (Exception e) {
            Ventana.ShowErrorMessage("Error al limpiar la tabla.");
        }
        
        for (int i = 0; i < indicadores.size(); i++) {
            
            fila[0] = indicadores.get(i);
            fila[1] = analisisRF.get(indicadores.get(i));
            fila[2] = indicadoresEstandar.get(i);
            fila[3] = analisisBM.get(indicadores.get(i));
            
            
            modelo.addRow(fila);
            this.JTableBenchMarking.setModel(modelo);
        }
        
    }
    
    public void cargarDatosTablaCuentas()
    {
        //Cuando se llama este metodo los 4 objetos de analisi deben estar creados
        System.out.println("Vamos a llenar la tabla  de cuentas ");
        
        String fila[] = new String[5];
        
        
           
        
        
        ArrayList<String> cuentasordenadasSF = sfX.obtenerNombresdeCuentasOrdenadas();
        ArrayList<String> cuentasordenadasER = erX.obtenerNombresdeCuentasOrdenadas();
        
        Map<String,ArrayList<String>> cuentassfX = sfX.importarNombreySaldo();
        Map<String,ArrayList<String>> cuentaserX = erX.importarCuentas();
        Map<String,ArrayList<String>> cuentassfY = sfY.importarNombreySaldo();
        Map<String,ArrayList<String>> cuentaserY = erY.importarCuentas();
        
        PorcientosIntegrados porcientosIntegradosSFX = new PorcientosIntegrados(cuentassfX);
        PorcientosIntegrados porcientosIntegradosERX = new PorcientosIntegrados(cuentaserX);
         
        //iferencias diferenciasER = new Diferencias(cuentaserX, cuentaserY);
        //Diferencias diferenciasSF = new Diferencias(cuentassfX, cuentassfY);
        
        Map<String,String> analisisporcientosSFX = porcientosIntegradosSFX.AnalisisPorcientosIntegrados();
        Map<String,String> analisisporcientosERX = porcientosIntegradosERX.AnalisisPorcientosIntegrados();
        
        //Map<String, String> analisisdiferenciasSF = diferenciasSF.analisisDiferencias(cuentasordenadasSF);
        //Map<String, String> analisisdiferenciasER = diferenciasER.analisisDiferencias(cuentasordenadasER); 
        
        
        
        for (int i = 0; i < cuentasordenadasSF.size(); i++) {
            fila[0] = cuentasordenadasSF.get(i);
            System.out.println(""+cuentasordenadasSF.get(i));
            //fila[1] = cuentassfX.get(cuentasordenadasSF.get(i)).get(1);
            //fila[2] = cuentassfY.get(cuentasordenadasSF.get(i)).get(1);
            //fila[3] = analisisporcientosSFX.get(cuentasordenadasSF.get(i));
            //fila[4] = analisisdiferenciasSF.get(cuentasordenadasSF.get(i));
            fila[4] = "vacio";
            
            
        }
        
    }
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBoxAnalisis;
    private javax.swing.JPanel Fondo;
    private javax.swing.JTable JTableBenchMarking;
    private javax.swing.JPanel PanelEstadosFinancieros;
    private javax.swing.JPanel PanelTablaBench;
    private javax.swing.JPanel Panel_Opciones;
    private javax.swing.JRadioButton RdbComercio;
    private javax.swing.JRadioButton RdbIndustria;
    private javax.swing.JRadioButton RdbServicios;
    private javax.swing.JRadioButton RdbTecno;
    private javax.swing.ButtonGroup Rdbs_Ramo;
    private javax.swing.ButtonGroup TipoAnálisis;
    private javax.swing.JButton btConfirmar;
    private javax.swing.JButton btRegresar;
    private javax.swing.JList<String> jListArchivosAbiertos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbAgregarEstado;
    private javax.swing.JButton jbCerrarEstado;
    private javax.swing.JButton jbERPorcientosDiefernecias;
    private javax.swing.JButton jbRealizarPropuestas;
    private javax.swing.JButton jbSFPorcientosDiferencias;
    private javax.swing.JButton jbVerAnalisis;
    private javax.swing.JRadioButton jrbPorcientosDiferencias;
    private javax.swing.JRadioButton jrbRazonesyBM;
    private javax.swing.JLabel lbIncrementoVentas;
    private javax.swing.JLabel lbPorcentaje;
    private javax.swing.JLabel lbRamo;
    private javax.swing.JLabel lb_OpcionAnalisis;
    private javax.swing.JTextField txtIncVentas;
    private javax.swing.JTextField txtPorcentaje;
    // End of variables declaration//GEN-END:variables
}
